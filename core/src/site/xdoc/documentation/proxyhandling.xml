<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2005-2017 Dozer Project

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<document xmlns="http://maven.apache.org/XDOC/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
  <properties>
    <title>Proxy Object Handling</title>
    <author email="buzdin@gmail.com">Dmitry Buzdin</author>
  </properties>
  <head>
    <title/>
    <meta http-equiv="CACHE-CONTROL" name="CACHE-CONTROL" content="NO-CACHE"/>
    <meta http-equiv="PRAGMA" name="PRAGMA" content="NO-CACHE"/>
    <meta http-equiv="EXPIRES" content="0"/>
  </head>
  <body>
    <section name="Proxy Objects">
        <subsection name="Overview">
        <p>
            Dozer supports mappings done on proxy objects. This is typically the case when using persistence
            framework, which supports sophisticated features like lazy-loading. In this case application is working
            with fake objects, containing the real objects encapsulated.

            Implementation of proxies is dependant on the technology you use. Generally speaking, there are two popular
            libraries for creating Java proxies (<a href="http://cglib.sourceforge.net/">Cglib</a> and
            <a href="http://www.csg.is.titech.ac.jp/~chiba/javassist/">Javassist</a>). However, how particular
            framework makes uses of them could also vary.

            Dozer offers by default a generic way to handle simple proxy scenarios, both Javassist and Cglib. However it
            is strongly recommended to tune proxy handling behavior for your particular scenario.
        </p>
        </subsection>
        <subsection name="Configuration">
            <p>
                Proxy implementation is set-up by modifying <a href="configuration/configuration.html">configuration file</a>.
                Currently, besides of default behavior, Hibernate and No-Proxy modes are supported.
                For the full list of the implementations, see the list of org.dozer.util.DozerProxyResolver
                interface implementations. The list could be retrieved from JavaDocs.
            </p>
            <p>
                In case you do not map proxied objects - use NoProxy resolver, which imposes minimum
                performance overhead.
            </p>
        </subsection>
        <subsection name="Custom Scenarios">
            <p>
                For custom scenarios it is possible to provide your own implementation of
                org.dozer.util.DozerProxyResolver interface. It is configured in the same way as the
                standard classes.
            </p>
        </subsection>
    </section>
  </body>
</document>
