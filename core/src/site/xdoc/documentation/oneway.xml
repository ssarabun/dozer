<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2005-2017 Dozer Project

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<document xmlns="http://maven.apache.org/XDOC/2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
  <properties>
    <title>Excluding Fields</title>
    <author email="fgarsombke@yahoo.com">Franz Garsombke</author>
  </properties>
  <head>
    <title/>
    <meta http-equiv="CACHE-CONTROL" name="CACHE-CONTROL" content="NO-CACHE"/>
    <meta http-equiv="PRAGMA" name="PRAGMA" content="NO-CACHE"/>
    <meta http-equiv="EXPIRES" content="0"/>
  </head>
  <body>
    <section name="One-Way Mapping">
      <p>
        You can set how a mapping definition behaves as far as direction goes. If you only want to map two classes
        to go one-way you can set this at the mapping level. The default is bi-directional. This can be set at the
        mapping level OR the field level. When one-way is specified, "a" is always the src object and "b" is always
        the destination object.

      </p>
      <source>
        <![CDATA[ 
<mapping type="one-way"> 
  <class-a>org.dozer.vo.TestObjectFoo</class-a>
  <class-b>org.dozer.vo.TestObjectFooPrime</class-b>   
    <field>
      <a>oneFoo</a>
      <b>oneFooPrime</b>
    </field>
</mapping>  
      ]]>
      </source>

      <p>
        In the following example the one-way fields are only mapped when "a" object is mapped to "b" object. If "b"
        is mapped to "a", then the field is not mapped.
      </p>
      <source>
        <![CDATA[ 

<mapping> 
  <class-a>org.dozer.vo.TestObjectFoo2</class-a>
  <class-b>org.dozer.vo.TestObjectFooPrime2</class-b>   
  <field type="one-way">
    <a>oneFoo2</a>
    <b>oneFooPrime2</b>
  </field>

  <field type="one-way">
    <a>oneFoo3.prime</a>
    <b>oneFooPrime3</b>
  </field>
      ]]>
      </source>
      <p></p>


      <subsection name="Excluding Fields One-Way">
        <p>
          Dozer supports field excludes going one-way as shown in the example. In the example the field is only
          excluded when "a" is mapped to "b". If "b" is mapped to "a", then the field is not excluded.
        </p>
        <source>
          <![CDATA[ 
<field-exclude type="one-way""> 
  <a>fieldToExclude</a> 
  <b>fieldToExclude</b> 
</field-exclude>           
            ]]>
        </source>
      </subsection>
    </section>
  </body>
</document>